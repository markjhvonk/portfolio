{"version":3,"sources":["serviceWorker.js","redux/actions/weather.js","redux/constants.js","redux/keys.js","redux/actions/github.js","redux/actions/plant.js","redux/actions/portfolio.js","components/Menu.js","components/Grid.js","components/TopBar.js","components/Card.js","components/Circle.js","components/Steps.js","components/Plant.js","components/GitFeed.js","components/work/WorkDetail.js","components/work/WorkItem.js","components/work/WorkContainer.js","components/ComingSoon.js","components/Weather.js","screens/Main.js","App.js","redux/reducers/index.js","redux/reducers/reducer_weather.js","redux/reducers/reducer_github.js","redux/reducers/reducer_plant.js","redux/reducers/reducer_portfolio.js","index.js","assets/icons/logo-m.svg","assets/icons/weather/icon-cloud.svg","assets/icons/weather/icon-rain.svg","assets/icons/icon-grid.svg","assets/icons/icon-grid-filled.svg","assets/icons/icon-smiley.svg","assets/icons/icon-smiley-filled.svg","assets/icons/icon-coffee.svg","assets/icons/icon-coffee-filled.svg","assets/icons/icon-info.svg","assets/images/bonsai.png","assets/icons/icon-drop.svg","assets/icons/github-icon.svg","assets/icons/icon-x.svg","assets/icons/weather/icon-rain-light.svg","assets/icons/weather/icon-sun.svg","assets/icons/weather/icon-moon.svg","assets/icons/weather/icon-thunder.svg","assets/icons/gitlab-icon.svg"],"names":["Boolean","window","location","hostname","match","URL","fetchWeather","city","url","type","payload","axios","get","fetchGithub","fetchPlant","fetchPortfolio","ApiTest","props","state","contact","about","this","Fragment","className","src","LogoM","alt","onClick","setState","GridIcon","GridIconFilled","SmileyIconFilled","SmileyIcon","CoffeeIconFilled","CoffeeIcon","href","target","Component","Grid","sectionA","sectionB","sectionC","sectionD","sectionE","sectionF","TopBar","children","Card","title","info","InfoIcon","percent","width","height","value","progressPercent","viewBox","stroke","strokeWidth","fill","strokeDasharray","strokeLinecap","cx","cy","r","Steps","steps","calcSteps","Date","getDay","timeOfDay","getHours","currentSteps","currentPercent","Math","ceil","getCurrentDay","Circle","Plant","reading","abs","round","data","backupDate","calcValue","random","timestamp","toDateString","Droplet","Bonsai","GitFeed","github","feed","forEach","item","undefined","commits","repo","replace","feedItem","key","id","githubIcon","name","message","created_at","push","githubData","length","selectFeed","WorkDetail","text","images","toggleModal","skills","git","showArrows","showThumbs","showIndicators","showStatus","autoPlay","interval","infiniteLoop","dynamicHeight","map","image","XIcon","WorkItem","snippet","coverImage","WorkContainer","modalTitle","modalText","modalImages","modalOpen","modalSkills","modalGit","portfolio","index","ComingSoon","subText","Weather","weatherName","IconThunder","IconRainLight","IconRain","IconSun","IconMoon","IconCloud","forecast","forecastData","cityName","date","dt","weatherDescription","weather","description","main","temperature","temp","getDate","getMonth","getFullYear","pickIcon","Default","fetchData","plant","Menu","connect","dispatch","bindActionCreators","App","path","exact","component","Main","rootReducer","combineReducers","action","createStoreWithMiddleware","applyMiddleware","ReduxPromise","logger","createStore","ReactDOM","render","store","reducers","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ebc4a282.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport { WEATHER_API_KEY } from '../keys';\r\nimport { WEATHER_URL } from '../constants';\r\n\r\nexport const FETCH_WEATHER = 'FETCH_WEATHER';\r\n\r\nconst URL = WEATHER_URL + `?appid=${WEATHER_API_KEY}`;\r\n\r\nexport function fetchWeather(city) {\r\n    const url = URL + `&q=${city},nl&units=metric`;\r\n    const request = axios.get(url);\r\n\r\n    return {\r\n        type: FETCH_WEATHER,\r\n        payload: request\r\n    };\r\n}","export const WEATHER_URL = `https://api.openweathermap.org/data/2.5/weather`;\r\nexport const GITHUB_URL = `https://api.github.com/users/markjhvonk/events`;\r\nexport const PLANT_URL = `http://163.158.143.54:5000`;","export const WEATHER_API_KEY = `4b8236a02d89eb3781cb61435e6e0d58`","import axios from 'axios';\r\nimport { GITHUB_URL } from '../constants';\r\n\r\nexport const FETCH_GITHUB = 'FETCH_GITHUB';\r\n\r\nexport function fetchGithub() {\r\n    const url = GITHUB_URL;\r\n    const request = axios.get(url);\r\n\r\n    return {\r\n        type: FETCH_GITHUB,\r\n        payload: request\r\n    };\r\n}","import axios from 'axios';\r\nimport { PLANT_URL } from '../constants';\r\n\r\nexport const FETCH_PLANT = 'FETCH_PLANT';\r\n\r\nexport function fetchPlant() {\r\n    const url = PLANT_URL;\r\n    const request = axios.get(url + '/latest');\r\n\r\n    return {\r\n        type: FETCH_PLANT,\r\n        payload: request\r\n    };\r\n}","import axios from 'axios';\r\n\r\nexport const FETCH_PORTFOLIO = 'FETCH_PORTFOLIO';\r\n\r\nexport function fetchPortfolio() {\r\n    const request = axios.get('./data/portfolioItems.json');\r\n\r\n    return {\r\n        type: FETCH_PORTFOLIO,\r\n        payload: request\r\n    };\r\n}","import React, { Component } from 'react';\r\nimport LogoM from '../assets/icons/logo-m.svg';\r\nimport GridIcon from '../assets/icons/icon-grid.svg';\r\nimport GridIconFilled from '../assets/icons/icon-grid-filled.svg';\r\nimport SmileyIcon from '../assets/icons/icon-smiley.svg';\r\nimport SmileyIconFilled from '../assets/icons/icon-smiley-filled.svg';\r\nimport CoffeeIcon from '../assets/icons/icon-coffee.svg';\r\nimport CoffeeIconFilled from '../assets/icons/icon-coffee-filled.svg';\r\n\r\nclass ApiTest extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = ({\r\n            contact: false,\r\n            about: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { about, contact } = this.state;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"menu\">\r\n                    <div className=\"menu__logo\">\r\n                        <img src={LogoM} alt=\"logo\" />\r\n                    </div>\r\n                    <div className=\"menu__item\" onClick={() => { this.setState({ contact: false, about: false }) }}>\r\n                        {(about || contact) ?\r\n                            <img src={GridIcon} className=\"menu__icon\" alt=\"grid icon\" />\r\n                            :\r\n                            <img src={GridIconFilled} className=\"menu__icon\" alt=\"grid icon\" />\r\n                        }\r\n                    </div>\r\n                    <div className=\"menu__item\"\r\n                        onClick={() => { this.setState({ about: !about, contact: false }) }}>\r\n                        {about ?\r\n                            <img src={SmileyIconFilled} className=\"menu__icon\" alt=\"smiley icon\" />\r\n                            :\r\n                            <img src={SmileyIcon} className=\"menu__icon\" alt=\"smiley icon\" />\r\n                        }\r\n                    </div>\r\n                    <div className=\"menu__item\"\r\n                        onClick={() => { this.setState({ contact: !contact, about: false }) }}>\r\n                        {contact ?\r\n                            <img src={CoffeeIconFilled} className=\"menu__icon\" alt=\"coffee icon\" />\r\n                            :\r\n                            <img src={CoffeeIcon} className=\"menu__icon\" alt=\"coffee icon\" />\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {(about || contact) &&\r\n                    <div className=\"menu__popup\">\r\n                        <div className=\"menu__popup-content\">\r\n                            {contact &&\r\n                                <React.Fragment>\r\n                                    <h2>Let's get in touch!</h2>\r\n                                    <p>You can find me on the following channels:</p>\r\n                                    <ul>\r\n                                        <li><a href=\"https://www.linkedin.com/in/mark-vonk-569745a7/\" target=\"_blank\">LinkedIn</a></li>\r\n                                        <li><a href=\"https://github.com/markjhvonk\" target=\"_blank\">GitHub</a></li>\r\n                                        <li><a href=\"https://codepen.io/markjhvonk\" target=\"_blank\">CodePen</a></li>\r\n                                        <li><a href=\"mailto:markjhvonk@gmail.com\">Email</a></li>\r\n                                    </ul>\r\n                                </React.Fragment>\r\n                            }\r\n                            {about &&\r\n                                <React.Fragment>\r\n                                    <h2>About me</h2>\r\n                                    <p>Hey my name is Mark and I'm a 23 year old, 4th year, CMGT student at the Hogeschool Rotterdam.</p>\r\n                                    <p>My current passions include, but are not limited to;<br />Front-end, Javascript, API's, big data, applied solutions, Python, Machine Learning & new technologies.</p>\r\n                                    <p>Some of my hobbies are;<br />Gaming, skateboarding, board/table-top games, 3d-printing, Arduino, Raspberry Pi & more programming!</p>\r\n                                    <p>Interested in more?<br /><a href=\"mailto:markjhvonk@gmail.com\">Get in touch!</a></p>\r\n                                </React.Fragment>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ApiTest;\r\n","import React, { Component } from 'react';\r\n\r\nclass Grid extends Component {\r\n    render() {\r\n        const {\r\n            sectionA,\r\n            sectionB,\r\n            sectionC,\r\n            sectionD,\r\n            sectionE,\r\n            sectionF\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className=\"grid__container\">\r\n                <div className=\"grid\">\r\n                    <div className=\"grid__section-A\">{sectionA}</div>\r\n                    <div className=\"grid__section-B\">{sectionB}</div>\r\n                    <div className=\"grid__section-C\">{sectionC}</div>\r\n                    <div className=\"grid__section-D\">{sectionD}</div>\r\n                    <div className=\"grid__section-E\">{sectionE}</div>\r\n                    <div className=\"grid__section-F\">{sectionF}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Grid;\r\n","import React, { Component } from 'react';\r\nimport LogoM from '../assets/icons/logo-m.svg';\r\n\r\nclass TopBar extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"top-bar\">\r\n                <div className=\"top-bar__content\">\r\n                    {this.props.children}\r\n                    <div className=\"top-bar__logo\">\r\n                        <img src={LogoM} alt=\"logo\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopBar;\r\n","import React, { Component } from 'react';\r\nimport InfoIcon from '../assets/icons/icon-info.svg';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        const { title, info } = this.props;\r\n\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card__top\">\r\n                    <h2 className=\"card__title\">{title}</h2>\r\n                    {info &&\r\n                        <div className=\"card__info-button\">\r\n                            <img src={InfoIcon} alt=\"card\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"card__content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        const { percent, width, height, value } = this.props;\r\n\r\n        const progressPercent = percent + \", 100\";\r\n\r\n        return (\r\n            <div className=\"circle\">\r\n                <span className=\"circle__value\">{value}</span>\r\n                <svg\r\n                    className=\"circle__svg\"\r\n                    viewBox=\"0 0 33.83098862 33.83098862\"\r\n                    width={width}\r\n                    height={height}>\r\n                    <circle\r\n                        className=\"circle__path\"\r\n                        stroke=\"#00acc1\"\r\n                        strokeWidth=\"1\"\r\n                        fill=\"none\"\r\n                        strokeDasharray={progressPercent}\r\n                        strokeLinecap=\"block\"\r\n                        cx=\"16.91549431\"\r\n                        cy=\"16.91549431\"\r\n                        r=\"15.91549431\" />\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\nimport Card from './Card';\r\nimport Circle from './Circle';\r\n\r\nclass Steps extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            steps: 0,\r\n            percent: 0\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.calcSteps();\r\n    }\r\n\r\n    getCurrentDay() {\r\n        switch (new Date().getDay()) {\r\n            case 0:\r\n                return \"Sunday\";\r\n                break;\r\n            case 1:\r\n                return \"Monday\";\r\n                break;\r\n            case 2:\r\n                return \"Tuesday\";\r\n                break;\r\n            case 3:\r\n                return \"Wednesday\";\r\n                break;\r\n            case 4:\r\n                return \"Thursday\";\r\n                break;\r\n            case 5:\r\n                return \"Friday\";\r\n                break;\r\n            case 6:\r\n                return \"Saturday\";\r\n        }\r\n    }\r\n\r\n    calcSteps() {\r\n        const timeOfDay = new Date().getHours();\r\n        const currentLimit = 8000;\r\n        const stepsPerHour = 670;\r\n        // const timeOfreturn 19;\r\n        if (timeOfDay >= 8) {\r\n            const currentSteps = (timeOfDay - 8) * stepsPerHour;\r\n            const currentPercent = Math.ceil((currentSteps / currentLimit) * 100);\r\n\r\n            if (currentSteps <= currentLimit) {\r\n                this.setState({ steps: currentSteps, percent: currentPercent });\r\n            } else {\r\n                this.setState({ steps: currentLimit, percent: 100 });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { steps, percent } = this.state;\r\n        return (\r\n            <Card title=\"Steps\">\r\n                <div className=\"steps\">\r\n                    <h3>{this.getCurrentDay()}</h3>\r\n                    <Circle width={`70%`} height={`100%`} percent={percent} value={steps} />\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Steps;\r\n","import React, { Component } from 'react';\r\nimport Card from './Card';\r\nimport Bonsai from '../assets/images/bonsai.png';\r\nimport Droplet from '../assets/icons/icon-drop.svg';\r\nimport {random} from 'lodash';\r\n\r\nclass Plant extends Component {\r\n\r\n    calcValue(reading) {\r\n        const minReading = 250;\r\n        const maxReading = 800;\r\n        const percentage = Math.abs(Math.round(((reading - minReading) / (maxReading - minReading)) * 100) - 100);\r\n\r\n        return 100 - percentage;\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.props;\r\n\r\n        const backupDate = new Date();\r\n\r\n        const reading = data[0] ? this.calcValue(data[0][0].value) : random(50, 100);\r\n        const timestamp = data[0] ? data[0][0].timestamp : backupDate.toDateString();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Card title=\"Ficus ginseng\">\r\n                    <div className=\"plant\">\r\n                        <div className=\"plant__value\">\r\n                            <img src={Droplet} alt=\"droplet icon\" />\r\n                            <span>{Math.round(reading)}%</span>\r\n                        </div>\r\n                        <div className=\"plant__date\">Last updated:<br />{timestamp}</div>\r\n                    </div>\r\n                </Card>\r\n                <img className=\"plant__image\" src={Bonsai} alt=\"bonsai tree\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Plant;","import React, { Component } from 'react';\r\nimport githubIcon from '../assets/icons/github-icon.svg'\r\nimport gitlabIcon from '../assets/icons/gitlab-icon.svg'\r\nimport Card from './Card';\r\n\r\nclass GitFeed extends Component {\r\n\r\n    selectFeed(github) {\r\n        let feed = [];\r\n\r\n        github.forEach(item => {\r\n            let url = (item.payload.commits !== undefined) ? item.payload.commits[0].url : item.repo.url;\r\n\r\n            if (url) {\r\n                url = url.replace(\"api.\", \"\");\r\n                url = url.replace(\"/repos\", \"\");\r\n            }\r\n\r\n            const feedItem =\r\n                <a target=\"_blank\" href={url} key={item.id}>\r\n                    <div className=\"git__item\">\r\n                        <div className=\"git__icon\">\r\n                            <img src={githubIcon} alt=\"github icon\" />\r\n                        </div>\r\n                        <div className=\"git__content\">\r\n                            <b>{item.type}</b>\r\n                            <span>{item.repo.name}</span>\r\n                            {item.payload.commits &&\r\n                                <span>{item.payload.commits[0].message}</span>\r\n                            }\r\n                            <small>{item.created_at}</small>\r\n                        </div>\r\n                    </div>\r\n                </a>;\r\n            feed.push(feedItem)\r\n        });\r\n\r\n        return feed;\r\n    }\r\n\r\n    render() {\r\n        const { githubData } = this.props;\r\n\r\n        return (\r\n            <Card title=\"Git feed\">\r\n                <div className=\"git\">\r\n                    {githubData.length > 0 &&\r\n                        this.selectFeed(githubData[0])\r\n                    }\r\n                    <div className=\"git__spacer\"></div>\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GitFeed;\r\n","import React, { Component } from 'react';\r\nimport XIcon from '../../assets/icons/icon-x.svg';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nclass WorkDetail extends Component {\r\n    render() {\r\n        const { title, text, images, toggleModal, skills, git } = this.props;\r\n\r\n        return (\r\n            <div className=\"work-detail__container\">\r\n                <div className=\"work-detail\">\r\n                    <div className=\"work-detail__images\">\r\n                        <Carousel\r\n                            showArrows={false}\r\n                            showThumbs={false}\r\n                            showIndicators={true}\r\n                            showStatus={false}\r\n                            autoPlay={true}\r\n                            interval={3000}\r\n                            infiniteLoop={true}\r\n                            dynamicHeight={false}>\r\n                            {images.map((image) => {\r\n                                return (\r\n                                    <div className=\"work-detail__slide\">\r\n                                        <img src={image} alt=\"slider\" />\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </Carousel>\r\n                    </div>\r\n                    <div className=\"work-detail__content\">\r\n                        <div className=\"work-detail__close-btn\" onClick={toggleModal}>\r\n                            <img src={XIcon} alt=\"close icon\" />\r\n                        </div>\r\n                        <div className=\"work-detail__content-body\">\r\n                            <h2>\r\n                                {title}\r\n                            </h2>\r\n                            <div className=\"work-detail__text\">\r\n                                <pre>\r\n                                    {text}\r\n                                </pre>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"work-detail__content-footer\">\r\n                            {git &&\r\n                                <div className=\"word-detail__code\">\r\n                                    <a href={git}>Check out the code.</a>\r\n                                </div>\r\n                            }\r\n                            <div className=\"work-detail__skills\">\r\n                                <h3>Skills used:</h3>\r\n                                {skills}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default WorkDetail;\r\n","import React, { Component } from 'react';\r\n\r\nclass WorkItem extends Component {\r\n    render() {\r\n        const { title, snippet, coverImage } = this.props;\r\n\r\n        return (\r\n            <div className=\"work-item\" onClick={this.props.onClick}>\r\n                <div className=\"work-item__container\">\r\n                    <div className=\"work-item__image\">\r\n                        <img src={coverImage} alt=\"work item\" />\r\n                    </div>\r\n                    <div className=\"work-item__content\">\r\n                        <h2>{title}</h2>\r\n                        <span>{snippet}</span>\r\n                    </div>\r\n                </div>\r\n                <span className=\"work-item__readmore\">READ MORE</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WorkItem;\r\n","import React, { Component } from 'react';\r\nimport WorkDetail from './WorkDetail';\r\nimport WorkItem from './WorkItem';\r\n\r\nclass WorkContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = ({\r\n            modalTitle: '',\r\n            modalText: '',\r\n            modalImages: '',\r\n            modalOpen: false\r\n        });\r\n    }\r\n\r\n    toggleModal(title, text, images, skills, git) {\r\n        const { modalOpen } = this.state;\r\n        this.setState({\r\n            modalOpen: !modalOpen,\r\n            modalTitle: title,\r\n            modalText: text,\r\n            modalImages: images,\r\n            modalSkills: skills,\r\n            modalGit: git\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { modalOpen, modalText, modalTitle, modalImages, modalSkills, modalGit } = this.state;\r\n        const { title, portfolio } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {modalOpen &&\r\n                    <WorkDetail\r\n                        toggleModal={() => { this.toggleModal() }}\r\n                        title={modalTitle}\r\n                        text={modalText}\r\n                        images={modalImages}\r\n                        skills={modalSkills}\r\n                        git={modalGit} />\r\n                }\r\n                <div className=\"work-container\">\r\n                    <h2 className=\"work-container__title\">{title}</h2>\r\n                    <div className=\"work-container__items\">\r\n                        {portfolio !== undefined &&\r\n                            portfolio.map((item, index) => {\r\n                                return (<WorkItem\r\n                                    key={index}\r\n                                    onClick={() => { this.toggleModal(item.title, item.text, item.images, item.skills, item.git) }}\r\n                                    title={item.title}\r\n                                    snippet={item.snippet}\r\n                                    coverImage={item.coverImage}\r\n                                    images={item.images} />)\r\n                            })\r\n                        }\r\n                        <div className=\"work-container__spacer\"></div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WorkContainer;\r\n","import React, { Component } from 'react';\r\n\r\nclass ComingSoon extends Component {\r\n    render() {\r\n        const { text, subText } = this.props;\r\n\r\n        return (\r\n            <div className=\"coming-soon\">\r\n                <div className=\"coming-soon__content\">\r\n                    <h2>{text}</h2>\r\n                    <h3>{subText}</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComingSoon;\r\n","import React, { Component } from 'react';\r\nimport IconCloud from '../assets/icons/weather/icon-cloud.svg';\r\nimport IconRainLight from '../assets/icons/weather/icon-rain-light.svg';\r\nimport IconRain from '../assets/icons/weather/icon-rain.svg';\r\nimport IconSun from '../assets/icons/weather/icon-sun.svg';\r\nimport IconMoon from '../assets/icons/weather/icon-moon.svg';\r\nimport IconThunder from '../assets/icons/weather/icon-thunder.svg';\r\n\r\nclass Weather extends Component {\r\n    pickIcon(weatherName) {\r\n        switch (weatherName) {\r\n            case 'Thunderstorm':\r\n                return IconThunder\r\n                break;\r\n            case 'Drizzle':\r\n                return IconRainLight\r\n                break;\r\n            case 'Rain':\r\n                return IconRain\r\n                break;\r\n            case 'Snow':\r\n                return IconRain\r\n                break;\r\n            case 'Clear':\r\n                const timeOfDay = new Date().getHours();\r\n                if (timeOfDay >= 8 && timeOfDay <= 18) {\r\n                    return IconSun\r\n                } else {\r\n                    return IconMoon\r\n                }\r\n                break;\r\n            case 'Clouds':\r\n                return IconCloud\r\n                break;\r\n            default:\r\n                return IconCloud\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { forecast } = this.props;\r\n        const forecastData = forecast.length > 0 ? forecast : null;\r\n        const cityName = forecastData ? forecast[0].name : null;\r\n        const date = forecastData ? new Date(forecast[0].dt * 1000) : null;\r\n        const weatherDescription = forecastData ? forecast[0].weather[0].description : null;\r\n        const weatherName = forecastData ? forecast[0].weather[0].main : null;\r\n        const temperature = forecastData ? Math.round(forecast[0].main.temp) : null;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {forecast.length > 0 &&\r\n                    <div className=\"weather\">\r\n                        <div className=\"weather__content\">\r\n                            {temperature}° {weatherDescription}<br />{cityName}, {date.getDate()}/{date.getMonth() + 1}/{date.getFullYear()}\r\n                        </div>\r\n                        <div className=\"weather__icon\">\r\n                            <img src={this.pickIcon(weatherName)} />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Weather;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchWeather } from '../redux/actions/weather';\r\nimport { fetchGithub } from '../redux/actions/github';\r\nimport { fetchPlant } from '../redux/actions/plant';\r\nimport { fetchPortfolio } from '../redux/actions/portfolio';\r\nimport Menu from '../components/Menu';\r\nimport Grid from '../components/Grid';\r\nimport TopBar from '../components/TopBar';\r\nimport Card from '../components/Card';\r\nimport Steps from '../components/Steps';\r\nimport Plant from '../components/Plant';\r\nimport GitFeed from '../components/GitFeed';\r\nimport WorkContainer from '../components/work/WorkContainer';\r\nimport ComingSoon from '../components/ComingSoon';\r\nimport Weather from '../components/Weather';\r\n\r\nclass Default extends Component {\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    fetchData = () => {\r\n        this.props.fetchWeather('Maassluis');\r\n        this.props.fetchGithub();\r\n        this.props.fetchPlant();\r\n        this.props.fetchPortfolio();\r\n    }\r\n\r\n    render() {\r\n        const { weather, plant, github, portfolio } = this.props;\r\n\r\n        return (\r\n            <div className=\"main\">\r\n                <Menu />\r\n                <TopBar>\r\n                    <Weather forecast={weather} />\r\n                </TopBar>\r\n                <Grid\r\n                    sectionA={\r\n                        <div className=\"main__title\">\r\n                            <h1>\r\n                                WELCOME TO MY PORTFOLIO!<br />\r\n                                -<br />\r\n                                MAKE YOURSELF AT HOME 👌🏻\r\n                            </h1>\r\n                        </div>\r\n                    }\r\n                    sectionB={<Steps />}\r\n                    sectionC={<GitFeed githubData={github} />}\r\n                    sectionD={<WorkContainer portfolio={portfolio[0]} title=\"Work\" />}\r\n                    sectionE={<Plant data={plant} />}\r\n                    sectionF={\r\n                        <Card title=\"Crawler - Most popular JavaScript framework\" info=\"Test\">\r\n                            <ComingSoon text=\"Coming Soon\" subText=\"(Side Project)\" />\r\n                        </Card>}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({\r\n        fetchWeather,\r\n        fetchGithub,\r\n        fetchPlant,\r\n        fetchPortfolio\r\n    }, dispatch);\r\n}\r\n\r\nfunction mapStateToProps({ weather, github, plant, portfolio }) {\r\n    return { weather, github, plant, portfolio };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Default);\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Main from './screens/Main';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Route path=\"/\" exact component={Main} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport WeatherReducer from './reducer_weather';\r\nimport GithubReducer from './reducer_github';\r\nimport PlantReducer from './reducer_plant';\r\nimport PortfolioReducer from './reducer_portfolio';\r\n\r\nconst rootReducer = combineReducers({\r\n    weather: WeatherReducer,\r\n    github: GithubReducer,\r\n    plant: PlantReducer,\r\n    portfolio: PortfolioReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { FETCH_WEATHER } from '../actions/weather';\r\n\r\nexport default function (state = [], action) {\r\n    // eslint-disable-next-line\r\n    switch (action.type) {\r\n        case FETCH_WEATHER:\r\n            return [action.payload.data, ...state];\r\n    }\r\n\r\n    return state;\r\n}","import { FETCH_GITHUB } from '../actions/github';\r\n\r\nexport default function (state = [], action) {\r\n    // eslint-disable-next-line\r\n    switch (action.type) {\r\n        case FETCH_GITHUB:\r\n            return [action.payload.data, ...state];\r\n    }\r\n\r\n    return state;\r\n}","import { FETCH_PLANT } from '../actions/plant';\r\n\r\nexport default function (state = [], action) {\r\n    // eslint-disable-next-line\r\n    switch (action.type) {\r\n        case FETCH_PLANT:\r\n            return [action.payload.data, ...state];\r\n    }\r\n\r\n    return state;\r\n}","import { FETCH_PORTFOLIO } from '../actions/portfolio';\r\n\r\nexport default function (state = [], action) {\r\n    // eslint-disable-next-line\r\n    switch (action.type) {\r\n        case FETCH_PORTFOLIO:\r\n            return [action.payload.data, ...state];\r\n    }\r\n\r\n    return state;\r\n}","import React from 'react';\r\nimport './assets/scss/index.scss';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger'\r\nimport ReduxPromise from 'redux-promise';\r\n\r\nimport App from './App';\r\nimport reducers from './redux/reducers';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(ReduxPromise, logger)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider store={createStoreWithMiddleware(reducers)}>\r\n        <App />\r\n    </Provider>\r\n    , document.querySelector('#root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo-m.23e1b806.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-cloud.d54b5caf.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-rain.057bc2d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-grid.7ac01586.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-grid-filled.05186112.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-smiley.31d06138.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-smiley-filled.454e4310.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-coffee.e0cf33d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-coffee-filled.29e00b34.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-info.ca488a58.svg\";","module.exports = __webpack_public_path__ + \"static/media/bonsai.0065a816.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-drop.3eb1f76f.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-icon.a2e04371.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-x.058c2c1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-rain-light.f29938d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-sun.198c860f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-moon.0423fff3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-thunder.5e009dad.svg\";","module.exports = __webpack_public_path__ + \"static/media/gitlab-icon.47ee55e2.svg\";"],"sourceRoot":""}